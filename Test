class HabitsTracker:
    # ... (other methods remain unchanged)

    def points_for_next_stat_level(self, stat):
        current_level = self.get_stat_level(stat)
        return 10 + (current_level - 1) * 7

    def get_stat_level(self, stat):
        completions = self.character.stats[stat]
        if completions < 10:
            return 1
        return 1 + (completions - 10) // 7 + 1

    def complete_habit(self, index=None):
        if index is None:
            selected = self.listbox.curselection()
            if not selected:
                messagebox.showwarning("Warning", "Please select a habit to complete.")
                return
            index = selected[0]
        
        habit = self.character.habits[index]
        self.character.xp += habit.xp_points
        self.character.reward_points += habit.xp_points
        self.character.stats[habit.category] += 1  # Increment by 1 for each completion
        
        old_level = self.get_stat_level(habit.category)
        new_level = self.get_stat_level(habit.category)
        
        if new_level > old_level:
            messagebox.showinfo("Stat Level Up!", f"Your {habit.category} has increased to level {new_level}!")
        
        self.check_level_up()
        self.update_character_profile()
        self.update_points_labels()
        self.update_stat_bars()
        self.save_character_data()
        messagebox.showinfo("Habit Completed", f"You gained {habit.xp_points} XP and Reward Points!")

    def update_stat_bars(self):
        for stat, (label, bar) in self.stat_bars.items():
            completions = self.character.stats[stat]
            level = self.get_stat_level(stat)
            next_level_completions = self.points_for_next_stat_level(stat)
            current_level_completions = next_level_completions - 7 if level > 1 else 0
            progress = (completions - current_level_completions) / (next_level_completions - current_level_completions) * 100
            label.config(text=f"{stat}: {level} ({completions}/{next_level_completions})")
            bar["value"] = progress

    # ... (other methods remain unchanged)